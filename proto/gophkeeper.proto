syntax = "proto3";

package proto;

import "validate/validate.proto";

option go_package = "internal/proto";

message RegistrationRequest {
    string email = 1 [(validate.rules).string.email = true];
    string password = 2;
}

message RegistrationResponse {
    string session_id = 1;
}

message PassOTPRequest {
    string session_id = 1;
    string password = 2;
}

message PassOTPResponse {
    string session_id = 1;
}

message MasterKeyRequest {
    string session_id = 1;
    string encryptedMasterKey = 2;
    string masterKeyPassHint = 3;
    string helloWorldEncrypted = 4;
}

message MasterKeyResponse {
    string access_token = 1;
}

message CheckEMailRequest {
    string email = 1 [(validate.rules).string.email = true];
}

message CheckEMailResponse {
    enum EMailStatus {
        BUSY = 0;
        AVAILABLE = 1;
    }
    EMailStatus status = 1; 
}

service RegistrationService {
    rpc CheckEMail(CheckEMailRequest)  returns (CheckEMailResponse);
    rpc Register(RegistrationRequest) returns (RegistrationResponse);
    rpc PassOTP(PassOTPRequest) returns (PassOTPResponse);
    rpc MasterKey(MasterKeyRequest) returns (MasterKeyResponse);
};

message LoginRequest {
    string email = 1 [(validate.rules).string.email = true];
    string password = 2;
}

message LoginResponse {
    string session_id = 1;
}

service AuthService {
    rpc Login(LoginRequest) returns (LoginResponse);
    rpc PassOTP(PassOTPRequest) returns (PassOTPResponse);
};

message PingRequest {}
message PingResponse {}

service Pinger {
    rpc Ping(PingRequest) returns (PingResponse);
};